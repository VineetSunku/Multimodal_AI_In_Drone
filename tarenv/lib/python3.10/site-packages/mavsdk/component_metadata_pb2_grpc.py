# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import component_metadata_pb2 as component__metadata_dot_component__metadata__pb2


class ComponentMetadataServiceStub(object):
    """Access component metadata json definitions, such as parameters.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RequestComponent = channel.unary_unary(
                '/mavsdk.rpc.component_metadata.ComponentMetadataService/RequestComponent',
                request_serializer=component__metadata_dot_component__metadata__pb2.RequestComponentRequest.SerializeToString,
                response_deserializer=component__metadata_dot_component__metadata__pb2.RequestComponentResponse.FromString,
                )
        self.RequestAutopilotComponent = channel.unary_unary(
                '/mavsdk.rpc.component_metadata.ComponentMetadataService/RequestAutopilotComponent',
                request_serializer=component__metadata_dot_component__metadata__pb2.RequestAutopilotComponentRequest.SerializeToString,
                response_deserializer=component__metadata_dot_component__metadata__pb2.RequestAutopilotComponentResponse.FromString,
                )
        self.SubscribeMetadataAvailable = channel.unary_stream(
                '/mavsdk.rpc.component_metadata.ComponentMetadataService/SubscribeMetadataAvailable',
                request_serializer=component__metadata_dot_component__metadata__pb2.SubscribeMetadataAvailableRequest.SerializeToString,
                response_deserializer=component__metadata_dot_component__metadata__pb2.MetadataAvailableResponse.FromString,
                )
        self.GetMetadata = channel.unary_unary(
                '/mavsdk.rpc.component_metadata.ComponentMetadataService/GetMetadata',
                request_serializer=component__metadata_dot_component__metadata__pb2.GetMetadataRequest.SerializeToString,
                response_deserializer=component__metadata_dot_component__metadata__pb2.GetMetadataResponse.FromString,
                )


class ComponentMetadataServiceServicer(object):
    """Access component metadata json definitions, such as parameters.
    """

    def RequestComponent(self, request, context):
        """
        Request metadata from a specific component. This is used to start requesting metadata from a component.
        The metadata can later be accessed via subscription (see below) or GetMetadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestAutopilotComponent(self, request, context):
        """
        Request metadata from the autopilot component. This is used to start requesting metadata from the autopilot.
        The metadata can later be accessed via subscription (see below) or GetMetadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeMetadataAvailable(self, request, context):
        """
        Register a callback that gets called when metadata is available
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadata(self, request, context):
        """
        Access metadata. This can be used if you know the metadata is available already, otherwise use
        the subscription to get notified when it becomes available.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ComponentMetadataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RequestComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestComponent,
                    request_deserializer=component__metadata_dot_component__metadata__pb2.RequestComponentRequest.FromString,
                    response_serializer=component__metadata_dot_component__metadata__pb2.RequestComponentResponse.SerializeToString,
            ),
            'RequestAutopilotComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestAutopilotComponent,
                    request_deserializer=component__metadata_dot_component__metadata__pb2.RequestAutopilotComponentRequest.FromString,
                    response_serializer=component__metadata_dot_component__metadata__pb2.RequestAutopilotComponentResponse.SerializeToString,
            ),
            'SubscribeMetadataAvailable': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMetadataAvailable,
                    request_deserializer=component__metadata_dot_component__metadata__pb2.SubscribeMetadataAvailableRequest.FromString,
                    response_serializer=component__metadata_dot_component__metadata__pb2.MetadataAvailableResponse.SerializeToString,
            ),
            'GetMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadata,
                    request_deserializer=component__metadata_dot_component__metadata__pb2.GetMetadataRequest.FromString,
                    response_serializer=component__metadata_dot_component__metadata__pb2.GetMetadataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mavsdk.rpc.component_metadata.ComponentMetadataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ComponentMetadataService(object):
    """Access component metadata json definitions, such as parameters.
    """

    @staticmethod
    def RequestComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mavsdk.rpc.component_metadata.ComponentMetadataService/RequestComponent',
            component__metadata_dot_component__metadata__pb2.RequestComponentRequest.SerializeToString,
            component__metadata_dot_component__metadata__pb2.RequestComponentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestAutopilotComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mavsdk.rpc.component_metadata.ComponentMetadataService/RequestAutopilotComponent',
            component__metadata_dot_component__metadata__pb2.RequestAutopilotComponentRequest.SerializeToString,
            component__metadata_dot_component__metadata__pb2.RequestAutopilotComponentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeMetadataAvailable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/mavsdk.rpc.component_metadata.ComponentMetadataService/SubscribeMetadataAvailable',
            component__metadata_dot_component__metadata__pb2.SubscribeMetadataAvailableRequest.SerializeToString,
            component__metadata_dot_component__metadata__pb2.MetadataAvailableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mavsdk.rpc.component_metadata.ComponentMetadataService/GetMetadata',
            component__metadata_dot_component__metadata__pb2.GetMetadataRequest.SerializeToString,
            component__metadata_dot_component__metadata__pb2.GetMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
