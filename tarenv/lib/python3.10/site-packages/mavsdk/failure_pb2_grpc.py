# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import failure_pb2 as failure_dot_failure__pb2


class FailureServiceStub(object):
    """Inject failures into system to test failsafes.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Inject = channel.unary_unary(
                '/mavsdk.rpc.failure.FailureService/Inject',
                request_serializer=failure_dot_failure__pb2.InjectRequest.SerializeToString,
                response_deserializer=failure_dot_failure__pb2.InjectResponse.FromString,
                )


class FailureServiceServicer(object):
    """Inject failures into system to test failsafes.
    """

    def Inject(self, request, context):
        """Injects a failure.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FailureServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Inject': grpc.unary_unary_rpc_method_handler(
                    servicer.Inject,
                    request_deserializer=failure_dot_failure__pb2.InjectRequest.FromString,
                    response_serializer=failure_dot_failure__pb2.InjectResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mavsdk.rpc.failure.FailureService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FailureService(object):
    """Inject failures into system to test failsafes.
    """

    @staticmethod
    def Inject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mavsdk.rpc.failure.FailureService/Inject',
            failure_dot_failure__pb2.InjectRequest.SerializeToString,
            failure_dot_failure__pb2.InjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
